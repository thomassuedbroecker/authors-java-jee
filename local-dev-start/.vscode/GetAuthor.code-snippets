{ 
	// Placeholders with the same ids are connected.
	// Example:
	"OpenAPI getauthors imports": {
	   "scope": "java",
	   "prefix": "OPEN-API-import-getauthors",
	   "body": [
		"// OPEN API",
		"import org.eclipse.microprofile.openapi.annotations.OpenAPIDefinition;",
		"import org.eclipse.microprofile.openapi.annotations.Operation;",
		"import org.eclipse.microprofile.openapi.annotations.enums.SchemaType;",
		"import org.eclipse.microprofile.openapi.annotations.info.Contact;",
		"import org.eclipse.microprofile.openapi.annotations.info.Info;",
		"import org.eclipse.microprofile.openapi.annotations.info.License;",
		"import org.eclipse.microprofile.openapi.annotations.responses.APIResponses;",
		"import org.eclipse.microprofile.openapi.annotations.responses.APIResponse;",
		"import org.eclipse.microprofile.openapi.annotations.media.Content;",
		"import org.eclipse.microprofile.openapi.annotations.media.Schema;",
		"import org.eclipse.microprofile.openapi.annotations.parameters.Parameter;"],
		"description": "OpenAPI import"
	},
	"OpenAPI getauthors class doc": {
		"scope": "java",
		"prefix": "OPEN-API-getauthors-class-doc",
		"body": ["@OpenAPIDefinition(info = @Info(title = 'Authors Service', version = '1.0', description = 'Authors Service APIs', contact = @Contact(url = 'https://github.com/nheidloff/cloud-native-starter', name = 'Niklas Heidloff'), license = @License(name = 'License', url = 'https://github.com/nheidloff/cloud-native-starter/blob/master/LICENSE')))"],
		"description": "OpenAPI getauthors class doc"
	}
}