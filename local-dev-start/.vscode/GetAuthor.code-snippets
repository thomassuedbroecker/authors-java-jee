{ 
	// **********************
	// Java
	// **********************
	"JAVA-constructor-public": {
		"scope": "java",
		"prefix": "JAVA-constructor-public",
		"body": [
		 "public ${1:classname} () {",
		 "  System.out.println( $BLOCK_COMMENT_START ... ${1:classname} started $BLOCK_COMMENT_END );",
		 "}"
		 ],
		 "description": "JAVA-constructor-public"
	},
	
	"JAVA-author-constructor-get-set": {
		"scope": "java",
		"prefix": "JAVA-author-constructor-get-set",
		"body": [
		"  public Author (String thename, String theblog, String thetwitter) {",
		"   name = thename;",
		"   blog = theblog;",
		"   twitter = thetwitter;"
		"  }",
		"",
		" $BLOCK_COMMENT_START*",
	    " * @return the blog",
	    " $BLOCK_COMMENT_END",
	    " public String getBlog() { return blog; }",
	    " $BLOCK_COMMENT_START*",
	    " * @return the name",
	    " $BLOCK_COMMENT_END",
	    " public String getName() { return name; }",
	    " $BLOCK_COMMENT_START*",
	    " * @return the twitter",
	    " $BLOCK_COMMENT_END",
	    " public String getTwitter() { return twitter;}",
	    " $BLOCK_COMMENT_START*",
	    " * @param blog the blog to set",
	    " $BLOCK_COMMENT_END",
	    " public void setBlog(String blog) { this.blog = blog;}",
	    " $BLOCK_COMMENT_START*",
	    " * @param name the name to set",
	    " $BLOCK_COMMENT_END",
	    " public void setName(String name) { this.name = name; }",
	    " $BLOCK_COMMENT_START*",
	    " * @param twitter the twitter to set",
	    " $BLOCK_COMMENT_END",
		" public void setTwitter(String twitter) { this.twitter = twitter;}"], 
		"description": "JAVA-author-constructor-get-set"
	},
	// **********************
	// Microprofile
	// **********************
	"MP-JAX-RS annotations": {
		"scope": "java",
		"prefix": "MP-JAX-RS annotations",
		"body": [
			"@Path($BLOCK_COMMENT_START /getauthor $BLOCK_COMMENT_END)",
			"@GET",
			"@Produces(MediaType.APPLICATION_JSON)"
		],
		 "description": "MP-JAX-RS annotations"
	 },
	"MP-OpenAPI imports": {
	   "scope": "java",
	   "prefix": "MP-OpenAPI imports",
	   "body": [
		"$LINE_COMMENT OPEN API",
		"import org.eclipse.microprofile.openapi.annotations.OpenAPIDefinition;",
		"import org.eclipse.microprofile.openapi.annotations.Operation;",
		"import org.eclipse.microprofile.openapi.annotations.enums.SchemaType;",
		"import org.eclipse.microprofile.openapi.annotations.info.Contact;",
		"import org.eclipse.microprofile.openapi.annotations.info.Info;",
		"import org.eclipse.microprofile.openapi.annotations.info.License;",
		"import org.eclipse.microprofile.openapi.annotations.responses.APIResponses;",
		"import org.eclipse.microprofile.openapi.annotations.responses.APIResponse;",
		"import org.eclipse.microprofile.openapi.annotations.media.Content;",
		"import org.eclipse.microprofile.openapi.annotations.media.Schema;",
		"import org.eclipse.microprofile.openapi.annotations.parameters.Parameter;"],
		"description": "MP OpenAPI import"
	},
	"MP-HealthCheck class": {
		"scope": "java",
		"prefix": "MP-HealthCheck class",
		"body": [
			"package com.ibm.authors;",
			"",
			"import javax.enterprise.context.ApplicationScoped;",
			"",
			"$LINE_COMMENT MP HealthCheck",
			"import org.eclipse.microprofile.health.Health;",
			"import org.eclipse.microprofile.health.HealthCheck;",
			"import org.eclipse.microprofile.health.HealthCheckResponse;",
			"",
			"@Health",
			"@ApplicationScoped",
			"public class $TM_FILENAME_BASE implements HealthCheck {",
			" @Override",
			" public HealthCheckResponse call() {",
			"   System.out.println($BLOCK_COMMENT_START... HealthCheck $BLOCK_COMMENT_END);",
			"   return HealthCheckResponse.named($BLOCK_COMMENT_START authors $BLOCK_COMMENT_END).withData($BLOCK_COMMENT_START authors $BLOCK_COMMENT_END, $BLOCK_COMMENT_START ok $BLOCK_COMMENT_END).up().build();",
			" }",
			"}"],
			"description": "MP-HealthCheck class"
	},
	// **********************
	// Open Liberty
	// **********************
	"OL- Enable liberty-maven plugin": {
		"scope": "xml",
		"prefix": "OL- Enable liberty-maven plugin",
		"body": [
			"<!-- Enable liberty-maven plugin -->",
            "<plugin>",
            "   <groupId>io.openliberty.tools</groupId>",
			"   <artifactId>liberty-maven-plugin</artifactId>",
			"</plugin>",
			"<!-- Enable liberty-maven-plugin -->"
			],  	
		 	"description": "OL- Enable liberty-maven plugin"
	 },
	 "OL- add libertyMavenConfiguration": {
		"scope": "xml",
		"prefix": "OL- add libertyMavenConfiguration",
		"body": [
				"<!-- libertyMavenConfiguration -->","<configuration>",
				"   <serverName>authorsDevStartServer</serverName>",
				"   <configFile>liberty/server.xml</configFile>",
            	"</configuration>",
				"<!-- libertyMavenConfiguration -->"
				],  	
				"description": "OL- Enable liberty-maven plugin"
	}

}